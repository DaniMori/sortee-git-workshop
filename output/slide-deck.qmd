---
title:       "Version control with git + GitHub for scientific workflows"
date:        2023-06-20
date-format: long
author:      |
  Daniel Morillo, Ph.D.\
  [![](../www/github-logo.png){height="50"}](https://github.com/DaniMori/)&emsp;
  [![](../www/orcid.png){height="50"}](https://orcid.org/0000-0003-3021-3878)
institute:   |
  [![](../www/cibersam.png){height="75"}](https://www.cibersam.es/) &emsp;&emsp;
  [![](../www/ki-logo.jpg){height="85"}](https://ki.se/)
format:
  revealjs:
    slide-number:     false
    fig-cap-location: bottom
    transition:       none
    incremental:      true
    auto-stretch:     true
    self-contained:   true
    theme:            ../www/extra-styles.scss
    view-distance:    3
    template-partials:
      - ../www/title-slide.html
knitr: true
---

# git + GitHub: An overview {#title-slide}

![](../www/git-github.webp)

::: aside
Taken from [git + GitHub for beginners
I](https://medium.com/cs-note/git-and-github-for-beginners-i-tutorial-263caa01f9c3)
\@ [Medium.com](https://medium.com/)
:::

<!-- Alt image from: https://dev.to/chrisachinga/git-and-github-install-configure-51pa -->

## What is git?

<br>

-   Version control system

<br>

-   "History" of changes

<br>

-   Allows "time-travelling"

<!-- TODO: Include Delorean pic from https://ccn-journal-prod.azurewebsites.net/2021/06/25/back-to-the-future-delorean-says-its-coming-back-and-launches-an-auction/ -->

```{=html}
<!-- ::: aside

*title* by [Attribution](link)

::: -->
```
## What is Github?

<br>

-   Centralized git server

<br>

-   Backup + collaboration

<br>

-   Nice GUI & features on top of VC

## Typical VC setup

![](../www/git-workflow.png){fig-align="center" height="520"}

::: aside
Taken from [Hackolade.com](https://hackolade.com/help/Teamcollaboration.html)
:::

::: notes
-   You have a "local repository"

-   You don't need a "cloud server" to use version control

-   You use a VC server to back-up and collaborate
:::

## Git jargon

<br>

-   **Repository ("repo")**: A "project", where all your files live

-   **Remote**: Copy of a repository in Github

-   **Local**: Copy of a repository in your computer

-   **Clone**: To copy a local repository from a remote

## Learn more

<br>

::: nonincremental
0.  [I am a Dropbox User and I Don't Get Git](https://garba.org/posts/2021/git/)
    by [Ernesto Gabarino](https://garba.org/about/me/)

1.  [Git cheat sheet](https://jdsalaro.com/blog/git-cheat-sheet.html) by [Jayson
    Salazar](https://jdsalaro.com/about.html)

2.  [Pro Git, 2nd edition](https://git-scm.com/book/en/v2), by Scott Chacon and
    Ben Straub

3.  ["Become a git master"
    module](https://courses.csail.mit.edu/6.S194/13/lessons/03-git/index.html)
    from the [Open Source Software Project Lab
    course](https://courses.csail.mit.edu/6.S194/13/) \@ [MIT's Computer Science
    & Artificial Intelligence Laboratory](https://www.csail.mit.edu/)
:::

# First steps in GitHub

![](../www/github-mascot.png)

::: aside
Taken from [Analyzing GitHub with the search
API](https://www.perl.com/article/112/2014/9/5/Analyzing-GitHub-with-the-search-API/)
\@ [Perl.com](https://www.perl.com/)
:::

## Create a repository (I)

1.  [Sign in](https://github.com/login) to your GitHub account

2.  Go to <https://github.com/DaniMori/rproj-template>

3.  Click on "Use this template"

4.  Click on "Create a new repository"

## Create a repository (and II)

::: {.fragment .nonincremental}
5.  Fill in "Repository name" and "Description" with:

    > **Repository name:** my-first-repo\
    > **Description:** My first repository ever in GitHub

    OR

    use ***your own project name and description***
:::

6.  Choose "Private" visibility

7.  Leave "Include all branches" unticked

8.  Click on "Create repository from template"

::: notes
Depending on your settings you may be required a 2-factor authentication method

(NEXT)

The template will add some useful pre-cooked features to the new repository

(NEXT)

(NEXT)

(NEXT)

The name must be something short, and representatitve of the project aim

Description must be "short" and direct

(NEXT)

Public: Anyone can see it, even without signing in to GitHub

Private: Only collaborators (we will add them later on)

(NEXT)

We only need the current state of the repository (what is in the last "version"
of the main branch)

(NEXT)
:::

## Setting up

``` bash
# set a user name globally
git config --global user.name "username"`

# set an email address globally
git config --global user.email "email@provider.com"

git config --list --global
```

::: notes
Why doesn't Rstudio provide GUI functionality for this?
:::

## Learn more

## 2-col slide {.smaller}

::: columns
::: {.column width="60%"}
![](../www/image_path.jpg){fig-align="center" height="100%"}
:::

::: {.column width="40%"}
</br>

::: fragment
-   BP1

    -   BP 1.1

    -   BP 1.2
:::

</br>

::: fragment
-   BP2
:::
:::
:::

::: aside
*title* by [Attribution](link)
:::

::: notes
<!-- TODO: Notes -->
:::

## Image with text above

Text above

![](../www/vc-Lucas.jpg){fig-align="center" height="450"}

## Slide with citation

> Citation.\

---[Author \@ website](link)

## Embedded-file, centered

Text above

<br>

::: columns
::: {.column align="center" width="25%"}
:::

::: {.column align="center" width="50%"}
```{embed}
```
:::
:::

::: notes
<!-- TODO: Notes -->
:::

## Subtitles and numbering {.smaller}

### Subtitle 1:

0.  LE1

1.  LE2

2.  LE3

<br>

::: fragment
### Subtitle 2:

-   BP
:::

##  {.center}

::: {#title-slide .center}
### Many thanks!

<br>

### Tack så mycket!

<br>

### ¡Muchas gracias!
:::
